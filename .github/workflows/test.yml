# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  workflow_dispatch:
  push:
    branches:
      - 'develop'
      - 'master'
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
      - 'release/**'

jobs:
  build:

    runs-on: ubuntu-20.04

    services:
      alpino:
        image: registry.webhosting.rug.nl/compling/alpino:latest
        environment:
          - PROLOGMAXSIZE=1500M
        ports:
          - "7001:7001"
        command: Alpino -notk -veryfast user_max=600000 server_kind=parse server_port=7001 assume_input_is_tokenized=on debug=0 end_hook=xml -init_dict_p batch_command=alpino_server

      basex:
        image: basex/basexhttp:latest
        ports:
          - "1984:1984"
        command: basexserver

    strategy:
      matrix:
        python-version: ['3.8']
        node-version: ['16.x']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python {{ "${{ matrix.python-version }}" }}
      uses: actions/setup-python@v2
      with:
        python-version: "${{ matrix.python-version }}"
    - name: Use Node.js {{ "${{ matrix.node-version }}" }}
      uses: actions/setup-node@v2
      with:
        node-version: "${{ matrix.node-version }}"
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install virtualenv
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run all tests
      run: |
        cat bootstrap_ci.txt | python bootstrap.py
        yarn
        yarn django migrate
        yarn static-p
        find static
        yarn start-back-p &
        chromedriver --version
        yarn test
